name: security-it-stack

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=${ELASTIC_USER}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms${ELASTIC_MEM_LIMIT} -Xmx${ELASTIC_MEM_LIMIT}"
      - xpack.security.enabled=true
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD} -s http://localhost:9200/_cluster/health | grep -v 'red'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Setup service handles initial configuration for Elasticsearch and Kibana
  setup:
    image: curlimages/curl:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: >
      sh -c '
        sleep 30
        # Configure Kibana system user
        curl -s -X POST -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_security/user/kibana_system/_password -H "Content-Type: application/json" -d "{\"password\":\"${ELASTIC_PASSWORD}\"}"
        
        # Create role for syslog-ng with appropriate permissions
        curl -s -X POST -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_security/role/syslog-ng -H "Content-Type: application/json" -d "{\"cluster\":[\"monitor\",\"manage_index_templates\"],\"indices\":[{\"names\":[\"syslog-ng-*\"],\"privileges\":[\"create_index\",\"create\",\"write\",\"manage\"]}]}"
        
        # Create syslog-ng user and assign role
        curl -s -X POST -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_security/user/${SYSLOG_USER} -H "Content-Type: application/json" -d "{\"password\":\"${SYSLOG_PASSWORD}\",\"roles\":[\"syslog-ng\"],\"full_name\":\"Syslog NG User\"}"
        
        # Create initial index and template for syslog-ng data
        curl -s -X PUT -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/syslog-ng-$(date +%Y.%m.%d) -H "Content-Type: application/json" -d "{\"settings\":{\"number_of_shards\":1,\"number_of_replicas\":0}}"
        curl -s -X PUT -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200/_index_template/syslog-ng -H "Content-Type: application/json" -d "{\"index_patterns\":[\"syslog-ng-*\"],\"template\":{\"settings\":{\"number_of_shards\":1,\"number_of_replicas\":0},\"mappings\":{\"properties\":{\"@timestamp\":{\"type\":\"date\"}}}}}"
        
        # Wait for Kibana to be available
        until curl -s http://kibana:5601/api/status | grep -q "\"status\":{\"overall\":{\"level\":\"available\""; do sleep 5; done
        
        # Create Kibana index pattern for syslog-ng data
        curl -s -X POST -u elastic:${ELASTIC_PASSWORD} -H "kbn-xsrf: true" -H "Content-Type: application/json" http://kibana:5601/api/saved_objects/index-pattern/syslog-ng -d "{\"attributes\":{\"title\":\"syslog-ng-*\",\"timeFieldName\":\"@timestamp\"}}"
      '

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTIC_USER}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - SERVER_PUBLICBASEURL=http://localhost:5601
    ports:
      - "${KIBANA_PORT}:5601"

  suricata:
    container_name: suricata
    image: jasonish/suricata:latest
    network_mode: host
    cap_add:
      - NET_ADMIN
    volumes:
      - ./src/config/suricata:/etc/suricata
      - suricata_logs:/var/log/suricata
    command: ["/usr/bin/suricata", "-c", "/etc/suricata/suricata.yaml", "-i", "lo", "-v"]

  syslog-ng:
    container_name: syslog-ng
    image: ${SYSLOG_IMAGE}
    privileged: true
    volumes:
      - ./src/config/syslog-ng:/etc/syslog-ng
      - suricata_logs:/var/log/suricata:ro
      - nginx_logs:/var/log/nginx:ro
      - syslog_logs:/var/log/syslog-ng
    depends_on:
      elasticsearch:
        condition: service_healthy
      setup:
        condition: service_completed_successfully

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./src/web:/usr/share/nginx/html:ro
      - ./src/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    command: sh -c "mkdir -p /var/log/nginx && touch /var/log/nginx/access.log && touch /var/log/nginx/error.log && nginx -g 'daemon off;'"

volumes:
  es_data:
  suricata_logs:
  nginx_logs:
  syslog_logs:
