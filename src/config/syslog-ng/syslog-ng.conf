@version: 4.9
@include "scl.conf"

# Global options for log processing
options {
    time-reopen(10);       
    mark-freq(10);         
    stats(freq(60));       
    flush-lines(1);        
    chain-hostnames(no); 
    use-dns(no);           
    keep-hostname(yes);
};

# System and internal log sources
source s_local {
    system();    
    internal();       
};

# Suricata est la source des logs, l'endroit depuis lequel on les récupère
source s_suricata {
    file("/var/log/suricata/eve.json"
        flags(no-parse)    
        follow-freq(1)     # On vérifie toute les secondes
    );
};

# On va parser le Json pour être lisible par ElasticSearch
parser p_json {
    json-parser(
        prefix("")     
    );
};

# Elasticsearch destination with authentication
destination d_elastic {
    elasticsearch-http(
        url("http://elasticsearch:9200/_bulk")
        index("syslog-ng-${YEAR}.${MONTH}.${DAY}")
        type("")           
        user("syslog")
        password("MetNousCent")
        template("$(format-json --scope all-nv-pairs @timestamp=${ISODATE})\n") # format
        batch-lines(10)    
        workers(2)        
        disk-buffer(
            mem-buf-length(10000)
            disk-buf-size(2000000)
            reliable(yes)   # pour ne pas perdre les messages
        )
    );
};

# debug
destination d_console {
    file("/dev/stdout");
};

# System log processing pipeline
log {
    source(s_local);
    destination(d_console);
    destination(d_elastic);
};

# Fait le pont entre suricata et elasticsearch
log {
    source(s_suricata);
    parser(p_json);        # Parse JSON before forwarding
    destination(d_console);
    destination(d_elastic);
};
